// Generated by gencpp from file assignment1/GoTo.msg
// DO NOT EDIT!


#ifndef ASSIGNMENT1_MESSAGE_GOTO_H
#define ASSIGNMENT1_MESSAGE_GOTO_H

#include <ros/service_traits.h>


#include <assignment1/GoToRequest.h>
#include <assignment1/GoToResponse.h>


namespace assignment1
{

struct GoTo
{

typedef GoToRequest Request;
typedef GoToResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GoTo
} // namespace assignment1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::assignment1::GoTo > {
  static const char* value()
  {
    return "5ec21d6e53db8f56a8468d99e5c23c5b";
  }

  static const char* value(const ::assignment1::GoTo&) { return value(); }
};

template<>
struct DataType< ::assignment1::GoTo > {
  static const char* value()
  {
    return "assignment1/GoTo";
  }

  static const char* value(const ::assignment1::GoTo&) { return value(); }
};


// service_traits::MD5Sum< ::assignment1::GoToRequest> should match 
// service_traits::MD5Sum< ::assignment1::GoTo > 
template<>
struct MD5Sum< ::assignment1::GoToRequest>
{
  static const char* value()
  {
    return MD5Sum< ::assignment1::GoTo >::value();
  }
  static const char* value(const ::assignment1::GoToRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment1::GoToRequest> should match 
// service_traits::DataType< ::assignment1::GoTo > 
template<>
struct DataType< ::assignment1::GoToRequest>
{
  static const char* value()
  {
    return DataType< ::assignment1::GoTo >::value();
  }
  static const char* value(const ::assignment1::GoToRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::assignment1::GoToResponse> should match 
// service_traits::MD5Sum< ::assignment1::GoTo > 
template<>
struct MD5Sum< ::assignment1::GoToResponse>
{
  static const char* value()
  {
    return MD5Sum< ::assignment1::GoTo >::value();
  }
  static const char* value(const ::assignment1::GoToResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment1::GoToResponse> should match 
// service_traits::DataType< ::assignment1::GoTo > 
template<>
struct DataType< ::assignment1::GoToResponse>
{
  static const char* value()
  {
    return DataType< ::assignment1::GoTo >::value();
  }
  static const char* value(const ::assignment1::GoToResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ASSIGNMENT1_MESSAGE_GOTO_H
